package com.kaspersky.kaspresso.device.exploit

import android.support.test.espresso.Espresso
import android.support.test.espresso.matcher.ViewMatchers
import com.kaspersky.kaspresso.device.Device
import com.kaspersky.kaspresso.espressoext.viewactions.OrientationChangeAction
import com.kaspersky.klkakao.configurator.KakaoConfigurator
import com.kaspersky.klkakao.delegates.ViewInteractionDelegate

/**
 * An implementation of Exploit interface.
 */
object ExploitImpl : Exploit {

    private val interactionDelegate: ViewInteractionDelegate
        get() {
            return KakaoConfigurator.createViewInteractionDelegate(
                Espresso.onView(ViewMatchers.isRoot())
            )
        }

    /**
     * Changes an orientation of device.
     */
    override fun rotate() {
        val resumedActivity = Device.activities.getResumed() ?: return

        interactionDelegate.perform(
            OrientationChangeAction.toggle(resumedActivity)
        )
    }

    /**
     * Presses back button on the device.
     *
     * @param failTestIfAppUnderTestClosed if set to true, an exception will be thrown when Espresso navigates
     * outside the application or process under test.
     */
    override fun pressBack(failTestIfAppUnderTestClosed: Boolean) {
        if (failTestIfAppUnderTestClosed) {
            Espresso.pressBack()
        } else {
            Espresso.pressBackUnconditionally()
        }
    }

    /**
     * Presses home button on the device.
     *
     * @return true if successful, else return false
     */
    override fun pressHome(): Boolean = Device.uiDevice.pressHome()
}